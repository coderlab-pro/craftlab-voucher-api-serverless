openapi: 3.0.3

info:
  title: craftlab-voucher-api
  description: Generate voucher for craftlab's customers
  version: 'latest'

servers:
  - url: 'https://localhost:8080'

paths:
  '/ping':
    get:
      operationId: ping
      tags:
        - Health
      responses:
        200:
          description: pong
          content:
            text/plain:
              schema:
                type: string
                example: pong
  '/customers':
    get:
      operationId: getCustomers
      tags:
        - Customers
      parameters:
        - in: query
          name: page
          schema:
            $ref: '#/components/schemas/Page'
          required: true
        - in: query
          name: pageSize
          schema:
            $ref: '#/components/schemas/PageSize'
          required: true
      responses:
        200:
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    put:
      operationId: updateCustomer
      tags:
        - Customers
      requestBody:
        description: Customer that needs to be updated
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
      responses:
        200:
          description: Customer updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'

  /customers/{id}/vouchers:
    get:
      operationId: getCustomerVouchers
      tags:
        - Vouchers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Customer with vouchers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voucher'
    put:
      operationId: generateVouchersForCustomer
      tags:
        - Vouchers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: List of customers to generate vouchers for
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateVoucher'
      responses:
        200:
          description: Vouchers successfully generated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voucher'

components:
  schemas:
    Exception:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: InternalServerException
        message: Unexpected error
    BadRequestException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: BadRequestException
        message: Bad request
    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: NotAuthorizedException
        message: Not authorized
    ResourceNotFoundException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: ResourceNotFoundException
        message: Resource of type <T> identified by <I> not found
    TooManyRequestsException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: TooManyRequestsException
        message: Too many requests
    Customer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        mail:
          type: string
    CreateVoucher:
      type: object
      properties:
        validationDatetime:
          type: string
          format: date-time
        creationDatetime:
          type: string
          format: date-time
    Voucher:
      allOf:
        - $ref: '#/components/schemas/CreateVoucher'
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        customer:
          $ref: '#/components/schemas/Voucher'
    Page:
      type: integer
      description: Start at `1`
    PageSize:
      type: integer
      description: Cannot exceed `500`